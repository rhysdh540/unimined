plugins {
    id 'java'
    id 'xyz.wagyourtail.unimined' // version '1.0.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

base {
    archivesName = "UniminedExampleMod"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }

    withSourcesJar()
}

// this is just here so we can test the outputs easier and clean between tests
unimined.useGlobalCache = false

sourceSets {
    fabric
    neoforge
}

repositories {
    unimined.neoForgedMaven()
    unimined.spongeMaven()
    unimined.wagYourMaven("releases")
    unimined.modrinthMaven()
}

unimined.minecraft {
    version project.minecraft_version

    mappings {
        mojmap()

        devFallbackNamespace "official"
    }

    defaultRemapJar = false
}

unimined.minecraft(sourceSets.fabric) {
    combineWith(sourceSets.main)

    fabric {
        loader project.fabric_version
    }

    defaultRemapJar = true
}

unimined.minecraft(sourceSets.neoforge) {
    combineWith(sourceSets.main)

    neoForge {
        loader project.neoforge_version
    }

    minecraftRemapper.config {
        // neoforge adds 1 conflict, where 2 interfaces have a method with the same name on yarn/mojmap,
        // but the method has different names in the intermediary mappings.
        // this is a conflict because they have a class that extends both interfaces.
        // this shouldn't be a problem as long as named mappings don't make the name of those 2 methods different.
        ignoreConflicts(true)
    }

    defaultRemapJar = true
}

configurations {
    mainImplementation
}


dependencies {
    // we need this in main where it isn't by default
    implementation "org.spongepowered:mixin:0.8.5-SNAPSHOT"

    fabricModImplementation("maven.modrinth:lazydfu:0.1.3")
}

jar {
    enabled = false
}

processFabricResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

processNeoforgeResources {
    inputs.property "version", project.version

    filesMatching("META-INF/neoforge.mods.toml") {
        expand "version": project.version
    }
}